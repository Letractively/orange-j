Projekt Orange - Orange-J -
Orange Extension for jQuery
Bringing even more advanced coding laziness to the developer
Version 2.4.2 beta
author:Donovan Walker
donovan.walker+orangej@gmail.com

You may use this code and modify it freely so long as you maintain original credit at the top.
thanks!
-  There are 3 sizes of Orange-J in each download. Uncompressed, minified, and packed. All compression was done at 
   http://www.refresh-sf.com/yui/
-  HTML Snippet Engine (Snippet + JSON = HTML) Put it in the DOM or get a string back. Ideal for server JSON callbacks
-  Easy Event handling (for really complex event behaviors)
-  Utilities
      urlArg - get an argument value from any url
      urlParse - get all arguments in a url as a js object.
      Javascript Object Inspector (See ALL of a javascript object at runtime with a single call)
      Log (Is your site in beta? Logs to the firebug console if it exists, doesn't crash if not.)
-  Form Data (Javascript Object->Form Fields, Form Fields->Javascript Object) for convenience, you know?

***SNIPPETS***
METHOD REFERENCE
$("#snippetContainerElement").addSnippet("snippetName") <- adds the html contained within 'snippetContainerElement' as snippet 'snippetName'

$("#elementID").snippet("snippetName", data) <- (name of snippet stored in jQuery, properly formatted data object)
$("#elementID").snippetAppend("snippetName", data)
$("#elementID").snippetPrepend("snippetName", data)
$("#elementID").snippetString(snippetString, data) <- (the actual snippet, properly formatted data object)

FUNCTION REFERENCE (all can be called directly off '$' or off '$.oj'. The examples show the longer path name)
$.oj.setSnippetLib(inSnippetHash) <- (inSnippetHash:a js Object where each named attribute is a snippet)
										sets the snippets for this library.  Good if you have a lot of snippets and want to keep them handy
$.oj.snippetString(snippetString, data) <- (the actual snippet, properly formatted data object)
																				returns the filled snippet

The following function retrieves one or more snippets using http-get and stores them in the snippet library.
$.oj.getSnippets(inURL, callback(success)) <- (  inURL: the url of a file containing multiple snippets
                                          callback():a function that is called after the snippets have been retrieved. 'success' is false on failure, true otherwise)

$.oj.getSnippets(inURLHash, callback(hashKey, success)) <- (   inURLHash:a js Object where each named attribute is the url to a single snippet)
   example: $.loadURLSnippets({  my_tpl:"http://supernoggies.com/js_snippets/my_snippet.html",
                                 your_tpl:"/js_snippets/u_snippet.html"});
            $("#target").snippet("my_tpl", data);

***VALIDATION*** - with regular expressions
METHOD REFERENCE
$("#elementID").validate(inReName) <-	tests the matched form element (must be form element) against a regular expression in the library
	inRe = the name of the regular expression

   returns mixed - false on fail, the value of the element on success

FUNCTION REFERENCE
$.oj.validate(inReName, inRegex) <- Adds a regular expression to the library, or tests a string on a regular expression already assigned to the library
      Add a regular expression
      inReName = the name of the regular expression once added to the library
      inRegex 	= the regular expression to be added

      Test a string
      inReName = the name of the regular expression already in the library
      inRegex  = the string to test against the regular expression

***FORM DATA***
FUNCTION REFERENCE
$.oj.ofd(inElementIDArray, inPrefix) <- Creates a Javascript Object from html form elements with the
$.oj.fillForm(inObj, inPrefix) <- Fills a set of form elements with attributes of a Javascript object

***URL DATA***
METHOD REFERENCE
$("#cssexpression" or "someurl").urlArg()
FUNCTION REFERENCE


**EVENT HANDLING**
METHOD REFERENCE 
$("#elementID").listen(inConfig)

***UTILITIES***
FUNCTION REFERENCE
$.oj.inspect(inObj, inConfig)
$.oj.log(inObj, inConfig, inspect)
$.oj.attrList(inObj) <- retrieves a list of attribute names for the passed in object (prototype attributes not included)
$.oj.urlParam(inParamName, inDefault)
$.oj.clone(inObj) //this method is very similar to calling $.oj.extend(true, {}, inObjToBeCopied); but is kept for legacy compatibility
$.oj.len(inObj, inConfig)
$.oj.serializeObj(inObject, inAddPrefix, inFilter, inFilterPositive)
$.oj.serializeList(inList, inListName)